# # Simpler version of a man-page
wtfis() { curl "https://cheat.sh/$1"; } # Example: wtfis curl

# Copy to clipboard
alias copy='xclip -selection clipboard' # Example: echo "Hello" | copy

# Move 'up' so many directories instead of using several cd ../../, etc.
up() { cd $(eval printf '../'%.0s {1..$1}) && pwd; }

#Tail all logs in /var/log
alias logs="find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'


# Wikipedia article in less view
 wiki() {
    w3m -B 1 -dump "https://en.m.wikipedia.org/wiki/$1" |
    sed -n '/View source/,$p' |
    awk 'NR>1{print last} {last=$0} END{print last}' |
    less -R
}

cheatsrs() {
    w3m "https://cheats.rs"
}

## Guard against dangerous git actions
# TODO: Move this to its own dot_gitguard file


git () {
    local proceed

    # Define color codes
    local RED='\033[0;31m'
    local GREEN='\033[0;32m'
    local YELLOW='\033[0;33m'
    local LIGHT_GREY='\033[0;37m'  # Changed from GREY='\033[0;90m'
    local NC='\033[0m' # No Color

    prompt_user() {
        local message="$1"
        local alternative="$2"
        local explanation="$3"

        # Check if the shell is interactive
        if [[ $- == *i* ]]; then
            echo -e "${YELLOW}$message${NC}" >&2
            echo -e "Consider using '${GREEN}$alternative${NC}' instead." >&2

            if [ -n "$explanation" ]; then
                echo -e "${GREY}$explanation${NC}" >&2
            fi

            echo -en "${RED}Do you still want to proceed? (y/N) ${NC}"
            read proceed
            [[ $proceed =~ ^[Yy]$ ]]
        else
            # If not interactive, proceed without prompting
            return 0
        fi
    }

    case "$1" in
        "checkout")
            prompt_user "Don't use checkout; use switch or restore." \
            "git switch" \
            "Using 'git switch' is safer and more predictable for switching branches, while 'git restore' is better for discarding changes." \
            || return 1
            ;;
        "push")
            for arg in "$@"; do
                if [[ "$arg" =~ ^(--force|-f)$ ]]; then
                    prompt_user "Use --force-with-lease instead." "git push --force-with-lease" "This ensures that you're not overwriting changes made by others since your last pull, reducing the risk of losing work." || return 1
                fi
            done
            ;;
        "commit")
            if [[ "$2" == "-m" ]]; then
                prompt_user "Use -v instead." "git commit -v" "Using 'git commit -v' shows you the diff of your changes before committing, helping you ensure that you're committing what you intend." || return 1
            fi
            ;;
    esac

    command git "$@"
}

##############################################################################
# mark/jump support + completion
# un/mark name : bookmark a directory or remove one (unmark)
# jump name : jump to directory
# marks : show all bookmarks
export MARKPATH=$HOME/.marks
function jump {
    cd -P $MARKPATH/$1 2>/dev/null || echo "No such mark: $1"
}
function mark {
    mkdir -p $MARKPATH; ln -s $(pwd) $MARKPATH/$1
}
function unmark {
    rm -i $MARKPATH/$1
}
function marks {
    ls -l $MARKPATH | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\t-/g' && echo
}

_completemarks() {
    local curw
    if [ "$SHELL" = "/bin/bash" ]; then
        curw=${COMP_WORDS[COMP_CWORD]}
    else
        curw=${words[CURRENT]}
    fi
    local wordlist=$(find $MARKPATH -type l -printf "%f\n")
    if [ "$SHELL" = "/bin/bash" ]; then
        COMPREPLY=($(compgen -W '${wordlist[@]}' -- "$curw"))
    else
        compadd -X "Marks:" ${(f)wordlist}
    fi
}

if [ -n "$BASH_VERSION" ]; then
    complete -F _completemarks jump unmark
elif [ -n "$ZSH_VERSION" ]; then
    compctl -K _completemarks jump unmark
fi

