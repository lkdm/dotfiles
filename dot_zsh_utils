# View largest disk usage
alias largest='du -h 2> /dev/null | sort -hr | head -n20'

# # Simpler version of a man-page
wtfis() { curl "https://cheat.sh/$1"; } # Example: wtfis curl

# Copy to clipboard
alias copy='xclip -selection clipboard' # Example: echo "Hello" | copy

# Move 'up' so many directories instead of using several cd ../../, etc.
up() { cd $(eval printf '../'%.0s {1..$1}) && pwd; }

#Tail all logs in /var/log
alias logs="find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'


# Wikipedia article in less view
wiki() {
    w3m -B 1 -dump "https://en.m.wikipedia.org/wiki/$1" |
    sed -n '/View source/,$p' |
    awk 'NR>1{print last} {last=$0} END{print last}' |
    less -R
}

cheatsrs() {
    w3m "https://cheats.rs"
}


# Replaces @TMS with @TMS-ID
dn() {
  [[ $1 == "-h" || $1 == "--help" ]] && { echo 'Usage: dn "note with optional @TMS" (replaces @TMS with @TMS-{TMS_ID} from branch)'; return; }
  tms_id="${$(git rev-parse --abbrev-ref HEAD 2>/dev/null)##*/}"
  jrnl "$(echo "$1" | sed "s/@TMS/@TMS-$tms_id/g")"
}

# jrnl
# Zsh function wrapper for automated journaling with Git integration:
#
# 1. Pulls the latest changes from the remote repository.
# 2. Stages and commits changes if any modifications are detected.
# 3. Pushes new commits to the remote repository.
#
# The function will skip committing and pushing if a rebase or merge conflict is detected,
# ensuring that no actions are taken until the repository is in a clean state.
jrnl() {
    ~/.config/jrnl/scripts/pull.sh || exit
    command jrnl "$@" || exit
    ~/.config/jrnl/scripts/commit.sh
    ~/.config/jrnl/scripts/push.sh &
}

github() {
  if [ $# -ne 2 ]; then
    echo "Usage: github <username> <repository>"
    return 1
  fi
  git clone git@github.com:$1/$2.git
}

