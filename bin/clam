#!/usr/bin/env bash
# clam - run clamdscan and cleanup after

scan() {
  set -e
  trap "systemctl --user stop clamd" EXIT INT TERM

  echo "Starting clamd service..."
  systemctl --user start clamd
  sleep 15  # Wait for clamd socket to be created

  # Verify required commands exist
  HELP="You can install ClamAV using Homebrew with:\n\n  brew install clamav\n\nMake sure you have Homebrew installed first: https://brew.sh/"
  command -v freshclam >/dev/null 2>&1 || { echo -e "freshclam is not installed or not in \$PATH.\n$HELP" >&2; exit 1; }
  command -v clamdscan >/dev/null 2>&1 || { echo -e "clamdscan is not installed or not in \$PATH.\n$HELP" >&2; exit 1; }

  LOG_DIR="${XDG_STATE_HOME:-$HOME/.local/state}/clamav"
  SCAN_PATHS=(
    "$HOME"
    "/tmp"
  )

  IGNORE_PATHS=(
    "/var/home/luke/.var/app/com.usebottles.bottles/data/bottles"
    "/sysroot/ostree/repo/objects"
    "/tmp/.X11-unix"
    "/tmp/.ICE-unix"
  )

  # TODO: Use rsync filter scan_paths, removing ignore_paths.
  # Then save that to tmp file, read it back into clamdscan command

  mkdir -p "$LOG_DIR"

  echo "Updating virus database..."
  freshclam --config-file=$XDG_CONFIG_HOME/clamav/freshclam.conf

  echo "Starting virus scan..."
  clamdscan --config-file=$XDG_CONFIG_HOME/clamav/clamd.conf --fdpass --multiscan --log="$LOG_DIR/scan.log" "${SCAN_PATHS[@]}" &
  scan_pid=$!

  spinner="/|\-/|\-"
  i=0
  while kill -0 "$scan_pid" 2>/dev/null; do
    i=$(( (i+1) %8 ))
    printf "\rScanning... %c" "${spinner:$i:1}"
    sleep 5
  done
  wait "$scan_pid"

  echo -e "\rScan complete. Log saved to: $LOG_DIR/scan.log"
}

# Call the function when script runs
scan
